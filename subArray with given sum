subarraySum(arr, n, s)
    {
        let first = 0, second = 0, sum = arr[0];
        if(sum == s) return [1,1]
        if(s == 0) return [-1]
       while(first < n-1)
       {
            if(sum + arr[first + 1] <= s)
            {
                sum = sum + arr[first+1];
                first++;
            }
            else
            {
                sum = sum - arr[second];
                second++;
            }
            if(sum == s)
            return [(second+1), (first+1)]
            // return {arr[second], arr[first]}
        }
        return [-1]
        }
        //Time complexity: O[N]
        //Space complexity: O[1]
